# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: 05581284de7c898d6c2eee97cfa926d885bc8cb5b6d9310ea8465e1a28804746
    docker:
      - image: circleci/node:8.9-browsers
        environment:
            CHROME_BIN: "/usr/bin/google-chrome"
    working_directory: ~/react-dom-html
    steps:
      - checkout
      - run:
          name: "~/.npmrc"
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: "Checking Versions"
          command: |
            node --version
            npm --version
            yarn --version
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "yarn install"
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          command: |
            mkdir -p ./.build
            mkdir -p ./.build/lint
            mkdir -p ./.build/coverage
            mkdir -p ./.build/test
            mkdir -p ./coverage

            mkdir -p ./packages/react-dom-html/.build
            mkdir -p ./packages/react-dom-html/.build/lint
            mkdir -p ./packages/react-dom-html/.build/coverage
            mkdir -p ./packages/react-dom-html/.build/test
            mkdir -p ./packages/react-dom-html/coverage

            mkdir -p ./packages/react-dom-html-cli/.build
            mkdir -p ./packages/react-dom-html-cli/.build/lint
            mkdir -p ./packages/react-dom-html-cli/.build/coverage
            mkdir -p ./packages/react-dom-html-cli/.build/test
            mkdir -p ./packages/react-dom-html-cli/coverage

            mkdir -p ./packages/react-dom-html-tags/.build
            mkdir -p ./packages/react-dom-html-tags/.build/lint
            mkdir -p ./packages/react-dom-html-tags/.build/coverage
            mkdir -p ./packages/react-dom-html-tags/.build/test
            mkdir -p ./packages/react-dom-html-tags/coverage
          when: always
      - run:
          name: lint
          command: yarn wsrun ci-lint --stages --exclude react-dom-html-tags
      - run:
          name: "install code climate"
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: test-utils
          command: |
            # Prepare the test reporter
            ./cc-test-reporter before-build

            # Run the tests
            yarn wsrun build --stages --exclude react-dom-html-tags

            # wsrun + 'command-line-test' cause unexpected side-effects when testing, for now do it manually
            # yarn wsrun ci-test --stages --exclude react-dom-html-tags
            cd packages/react-dom-html-cli
            yarn ci-test
            cd ../..
            cd packages/react-dom-html
            yarn ci-test
            COVERAGE_EXIT_CODE=$?
            cd ../..

            # Copy the coverage file for reporting purposes
            cp -r ./packages/react-dom-html/.build/coverage/. ./.build/coverage/
            # TODO: Add react-dom-html-tags coverage

            # Prevent errors when re-building on the CI server (reports previously uploaded)
            set +e
            ./cc-test-reporter after-build -t lcov --exit-code $COVERAGE_EXIT_CODE
            REPORTER_EXIT_CODE=$?
            set -e
            if [ "$REPORTER_EXIT_CODE" != "0" ] && [ "$REPORTER_EXIT_CODE" != "255" ]; then
              exit $$REPORTER_EXIT_CODE
            fi
      - store_test_results:
          path: ./.build/test-utils/test-utils-report.xml
      - store_artifacts:
          path: ./.build/test-utils
          prefix: "test-utils"
      - store_artifacts:
          path: ./.build/lint
          prefix: "lint"
      - store_artifacts:
          path: ./.build/coverage
          prefix: "coverage"
      - deploy:
          name: Maybe Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git config -l
              git config user.email ci@circleci
              git config user.name CircleCI

              # Build for release
              # TODO: to include 'react-dom-html-tags' in build, REMOVE the package.json 'private: true' field
              #       and, remove all EXCLUDE options from this file
              yarn wsrun build --stages --exclude react-dom-html-tags
              # yarn wsrun publish --stages --exclude react-dom-html-tags

              # Tag the release, update package.json version and changelog, commit and push to github.
              node scripts/publish.js
            fi
